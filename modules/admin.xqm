xquery version "3.0";

module namespace admin="http://greatlinkup.com/apps/schema/admin";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://greatlinkup.com/apps/schema/config" at "config.xqm";
import module namespace  functx = "http://www.functx.com" at "functx.xqm";
import module namespace s2bootstrap="http://greatlinkup.com/apps/schema/schema2bootstrap" at "schema2bootstrap.xqm";
import module namespace s2instance="http://greatlinkup.com/apps/schema/schema2instance" at "schema2instance.xqm";
import module namespace sutil="http://greatlinkup.com/apps/schema/sprint-util" at 'sprint-utils.xqm';

declare namespace xs="http://www.w3.org/2001/XMLSchema";
declare namespace xf="http://www.w3.org/2002/xforms";
declare namespace ev="http://www.w3.org/2001/xml-events";
declare namespace bfc="http://betterform.sourceforge.net/xforms/controls";
declare namespace bf="http://betterform.sourceforge.net/xforms";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute data-template="admin:test" 
 : or class="admin:test" (deprecated). The function has to take at least 2 default
 : parameters. Additional parameters will be mapped to matching request or session parameters.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function admin:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function admin:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="admin:test"</code>.</p>
};

declare function admin:username($node as node(), $model as map(*)) {
    let $user:= request:get-attribute("com.greatlinkup.schema.user")
    let $name := if ($user) then sm:get-account-metadata($user, xs:anyURI('http://axschema.org/namePerson')) else 'Guest'
    return if ($name) then $name else $user
};

declare function admin:login($node as node(), $model as map(*)) {
    let $user:= request:get-attribute("com.greatlinkup.schema.user")
    return if ($user) then <a href="index.html?logout=true" class="btn btn-default">&#215;</a> else <a data-toggle="modal" href="#loginModal" class="btn btn-default">Login</a>                        
};

declare function admin:login-panel($node as node(), $model as map(*)) {
    if (request:get-attribute("com.greatlinkup.schema.user")) then () else
    (
        <!-- Modal -->,
        <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <form method="POST" class="form-horizontal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&#215;</button>
                            <h4 class="modal-title">Login</h4>
                        </div>
                        <div class="modal-body">
                                <div class="control-group">
                                    <label class="control-label" for="user">User:</label>
                                    <div class="controls">
                                        <input type="text" name="user" required="required"/>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label" for="password">Password:</label>
                                    <div class="controls">
                                        <input type="password" name="password"/>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <div class="controls">
                                        <label class="checkbox">
                                            <input type="checkbox" name="duration" value="P14D"/> Remember me for 2 weeks
                                        </label>
                                    </div>
                                </div>
                        </div>
                        <div class="modal-footer">
                                    <button class="btn btn-primary" type="submit">Login</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div><!-- /.modal-content -->
                </form>
            </div><!-- /.modal-dialog -->
        </div>,
        <!-- /.modal -->
        )
};

declare function admin:roles($node as node(), $model as map(*)) {
    let $doc := doc($config:data-root || '/config/security.xml')
    let $roles := for $role in $doc//role
                        let $users := for $user in $role/user/text()
                                    return <tr><td>{$user}</td></tr>
                    return ( <tr><th>{$role/@name/string()}</th></tr>,
                                $users)
                                    
    return <table class="table"><tbody>{$roles}</tbody></table>
};
